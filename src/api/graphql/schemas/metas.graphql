"Domaine minier"
type Domaine {
  "Id composée d'une seule lettre"
  id: ID!

  "Nom du domaine en français"
  nom: String!

  description: String

  ordre: Int

  titresTypes: [TitreType]

  titresCreation: Boolean
}

"Type de titre minier"
type TitreType {
  "Id composée de trois lettres"
  id: ID!

  domaine: Domaine!

  type: TitreTypeType!

  "Types de démarches applicables à ce type de titre"
  demarchesTypes: [DemarcheType]
  sections: Json
  archive: Boolean
  gestionnaire: Boolean
  associee: Boolean
  titresCreation: Boolean
}

"Type de titre minier"
type TitreTypeType {
  "Id composée de deux lettres"
  id: ID!

  "Nom du type en français"
  nom: String!

  description: String

  ordre: Int!
}

"Statut d'un titre minier"
type TitreStatut {
  "Id composée de trois lettres"
  id: ID!

  "Nom du statut en français"
  nom: String!

  "Couleur associé au statut"
  couleur: Couleur!

  description: String

  ordre: Int
}

"Type de démarche applicable à un titre minier"
type DemarcheType {
  "Id composée de trois lettres"
  id: ID!

  "Nom en français"
  nom: String!

  description: String

  "Ordre de ce type de démarche"
  ordre: Int

  "Si la démarche contient une information de duréee"
  duree: Boolean

  "Si la démarche contient des informations géographiques"
  points: Boolean

  "Si la démarche contient des informations de substances"
  substances: Boolean

  "Si la démarche contient des titulaires"
  titulaires: Boolean

  "Si la démarche est renouvelable"
  renouvelable: Boolean

  exception: Boolean

  "Type de titre pour laquelle cette démarche existe"
  titreTypeId: ID

  "Types d'étapes applicables à ce type de démarche"
  etapesTypes: [EtapeType]

  "Ids des types d'étape déjà présents sur cette démarche"
  etapesTypesIds: [ID]

  demarchesCreation: Boolean
}

type TravauxType {
  id: ID!
  nom: String!
  description: String
  ordre: Int
  travauxCreation: Boolean
}

"Statut d'une démarche applicable à un titre minier"
type DemarcheStatut {
  "Id composée de trois lettres"
  id: ID!

  "Nom en français"
  nom: String!

  couleur: Couleur!

  description: String

  ordre: Int
}

"Statut d'une phase de titre minier"
type PhaseStatut {
  "Statut d'une phase de titre minier est composé de trois lettres"
  id: ID!

  "Nom d'une phase de titre minier en français"
  nom: String!

  couleur: Couleur!
}

"Type d'étape d'une démarche de titre minier"
type EtapeType {
  "Id composée de trois lettres"
  id: ID!

  "Nom en français"
  nom: String!

  description: String

  ordre: Int!

  sections: Json

  legalLien: String
  legalRef: String
  dateDebut: String
  dateFin: String

  fondamentale: Boolean

  "Si ce type d'étape est unique au sein de la démarche"
  unique: Boolean

  acceptationAuto: Boolean

  publicLecture: Boolean
  entreprisesLecture: Boolean

  etapesStatuts: [EtapeStatut]

  etapesCreation: Boolean
}

"Statut d'une étape de démarche de titre minier"
type EtapeStatut {
  "Id du statut d'étape est composé de trois lettres"
  id: ID!

  "Nom du domaine en français"
  nom: String!

  couleur: Couleur!

  description: String

  ordre: Int
}

"Référence métier"
type ReferenceType {
  "Id du type de références en 3 lettres"
  id: ID!

  "Nom de la référence"
  nom: String
}

type AdministrationType {
  id: ID!
  nom: String
  ordre: Int
}

"Unité"
type Unite {
  id: ID!

  nom: String!

  symbole: String!
}

"Devise"
type Devise {
  id: ID!

  nom: String!
}

"Système géographique"
type GeoSysteme {
  id: ID!
  nom: String!
  ordre: Int!
  zone: String!
  uniteId: String
  unite: Unite!
  definitionProj4: String!
}

type DocumentType {
  id: ID!

  nom: String!
}

type DocumentVisibilite {
  id: ID!

  nom: String!
}

"Définitions et descriptions"
type Definition {
  id: ID!
  nom: String!
  slug: String!
  description: String
  couleur: String
  ordre: Int
  elements: [Definition]
}

type Permission {
  id: ID!
  nom: String
  ordre: Int!
}

input InputDomaine {
  "Id composée d'une seule lettre"
  id: ID!

  "Nom du domaine en français"
  nom: String

  description: String

  ordre: Int
}

input InputDefinition {
  id: ID!
  nom: String
  slug: String
  description: String
  couleur: String
  ordre: Int
}

input InputTitreTypeType {
  id: ID!
  nom: String
  description: String
  ordre: Int
}

input InputTitreStatut {
  id: ID!
  nom: String
  couleur: Couleur
  description: String
  ordre: Int
}

input InputDemarcheType {
  id: ID!
  nom: String
  description: String
  ordre: Int
  duree: Boolean
  points: Boolean
  substances: Boolean
  titulaires: Boolean
  renouvelable: Boolean
  exception: Boolean
}

input InputTravauxType {
  id: ID!
  nom: String
  description: String
  ordre: Int
}

input InputDemarcheStatut {
  id: ID!
  nom: String
  couleur: Couleur
  description: String
  ordre: Int
}

input InputPhaseStatut {
  id: ID!
  nom: String
  couleur: Couleur
}

input InputEtapeType {
  id: ID!
  nom: String
  description: String
  ordre: Int
  sections: Json
  legalLien: String
  legalRef: String
  dateDebut: String
  dateFin: String
  fondamentale: Boolean
  unique: Boolean
  acceptationAuto: Boolean
  publicLecture: Boolean
  entreprisesLecture: Boolean
}

input InputEtapeStatut {
  id: ID!
  nom: String
  couleur: Couleur
  description: String
  ordre: Int
}

input InputDevise {
  id: ID!
  nom: String
}

input InputUnite {
  id: ID!
  nom: String
  symbole: String
}

input InputAdministrationType {
  id: ID!
  nom: String
  ordre: Int
}

input InputDocumentType {
  id: ID!
  nom: String!
}

input InputPermission {
  id: ID!
  nom: String
}

input InputReferenceType {
  id: ID!
  nom: String
}

input InputGeoSysteme {
  id: ID!
  nom: String
  ordre: Int
  zone: String
  uniteId: String
  definitionProj4: String
}

"""
Liste de couleurs génériques
"""
enum Couleur {
  error
  info
  neutral
  success
  warning
}

input InputId {
  id: ID!
}
