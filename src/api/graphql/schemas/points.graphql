# import * from 'metas.graphql'
# import * from 'territoires.graphql'

"Paire de coordonnées géographiques"
type Coordonnees {
  "Valeur des coordonnées en X sous forme d'un nombre décimal"
  x: Float

  "Valeur des coordonnées en Y sous forme d'un nombre décimal"
  y: Float
}

"Point du périmètre géographique d'un titre (système géodésique WGS 84)"
type Point {
  """
  Id unique
  """
  id: ID

  """
  Slug composé de la concaténation:
  - de l'id de l'étape
  - du groupe (lettre 'g' suivie de 2 chiffres)
  - du contour (lettre 'c' suivie de 2 chiffres)
  - du point (lettre 'p' suivie de 3 chiffres)
  """
  slug: String

  "Coordonnées du point dans le système WGS 84"
  coordonnees: Coordonnees

  "Groupe de contours auquel appartient le point composé d'un nombre entier commençant à 1"
  groupe: Int

  "Contour auquel appartient le point composé d'un nombre entier commençant à 1. Le premier contour forme le périmètre. Les contours suivant forment des trous dans ce périmètre."
  contour: Int

  "Numéro du point dans le contour"
  point: Int

  "Nom du point tel que stipulé dans les documents officiels"
  nom: String

  "Description du point telle que stipulée dans les documents officiels"
  description: String

  "Si le point appartient à un périmètre de sécurité"
  securite: Boolean

  subsidiaire: Boolean

  lot: Int

  "Liste d'id de référence de points"
  references: [PointReference]
}

"Point du périmètre géographique d'un titre dans un système autre que WGS 84"
type PointReference {
  """
  Id unique
  """
  id: ID!

  """
  Slug composé de la concaténation:
  - de l'id du point
  - du système
  """
  slug: String

  "Code du système de référence géodésique"
  geoSysteme: GeoSysteme

  "Coordonnées du point dans le système géodésique"
  coordonnees: Coordonnees

  opposable: Boolean
}

type PointsImport {
  points: [Point]

  "Surface en km²"
  surface: Float

  "Les zones de SDOM impactées"
  sdomZones: [SDOMZone]

  "Les types de documents obligatoires dans cette zone"
  documentTypeIds: [String]

  "Messages d’informations relatifs au périmètre"
  messages: [String]
}

type PerimetreInformations {
  "Surface en km²"
  surface: Float

  "Les zones de SDOM impactées"
  sdomZones: [SDOMZone]

  "Les types de documents obligatoires dans cette zone"
  documentTypeIds: [String]

  "Messages d’informations relatifs au périmètre"
  messages: [String]
}

input InputPoint {
  id: ID
  groupe: Int!
  contour: Int!
  point: Int!
  nom: String
  description: String
  securite: Boolean
  subsidiaire: Boolean
  lot: Int
  references: [InputPointReference]!
}

input InputPointReference {
  id: ID
  geoSystemeId: ID!
  coordonnees: InputCoordonnees!
  opposable: Boolean
}

input InputCoordonnees {
  x: Float!
  y: Float!
}
