# import * from 'administrations.graphql'
# import * from 'calendrier.graphql'
# import * from 'documents.graphql'
# import * from 'entreprises.graphql'
# import * from 'geojsons.graphql'
# import * from 'metas-activites.graphql'
# import * from 'metas.graphql'
# import * from 'points.graphql'
# import * from 'statistiques.graphql'
# import * from 'substances.graphql'
# import * from 'territoires.graphql'
# import * from 'titres-activites.graphql'
# import * from 'titres-demarches.graphql'
# import * from 'titres-etapes.graphql'
# import * from 'titres.graphql'
# import * from 'utilisateurs.graphql'

"Type du contenu json"
scalar Json

"Type du fichier"
scalar FileUpload

"""
# API de Camino

> [Documentation](https://docs.camino.beta.gouv.fr)

## Lecture

Certaines requêtes sont publiques.

Certaines requêtes sont protégées et nécessitent une authentification par token (jwt).

Enfin, certaines requêtes retournent un résultat plus ou moins riche selon le niveau de permission de l'utilisateur authentifié.
"""
type Query {
  "Version de l'API"
  version: String

  "Utilisateur en fonction du token"
  moi: Utilisateur

  "Titre minier en fonction de son id"
  titre(id: ID!): Titre

  "Liste de titres miniers, en fonction d'arguments (optionnels)"
  titres(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    domainesIds: [ID]
    statutsIds: [ID]
    substances: String
    noms: String
    entreprises: String
    references: String
    territoires: String
  ): Titres

  "Liste de titres miniers, en fonction d'arguments (optionnels)"
  demarches(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    statutsIds: [ID]
    etapesInclues: [InputEtapeFiltre]
    etapesExclues: [InputEtapeFiltre]
    titresTypesIds: [ID]
    titresDomainesIds: [ID]
    titresStatutsIds: [ID]
    titresNoms: String
    titresEntreprises: String
    titresSubstances: String
    titresReferences: String
    titresTerritoires: String
  ): Demarches

  "Activité en fonction de son id"
  activite(id: ID!): Activite

  "Liste des activités"
  activites(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    annees: [Int]
    statutsIds: [ID]
    titresNoms: String
    titresEntreprises: String
    titresSubstances: String
    titresReferences: String
    titresTerritoires: String
  ): Activites

  "Années des activités"
  activitesAnnees: [Int]

  "Types d'activités"
  activitesTypes: [ActiviteType]

  "Statuts des rapports d'activités"
  activitesStatuts: [ActiviteStatut]

  "Types de démarches"
  demarchesTypes(titreId: ID, titreDemarcheId: ID): [DemarcheType]

  "Statuts de démarches"
  demarchesStatuts: [DemarcheStatut]

  "Types d'étapes"
  etapesTypes(titreDemarcheId: ID, titreEtapeId: ID): [EtapeType]

  "Utilisateur en fonction de son id"
  utilisateur(id: ID!): Utilisateur

  "Liste d'utilisateurs en fonction d'arguments (optionnels)"
  utilisateurs(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    entrepriseIds: [ID]
    administrationIds: [ID]
    permissionIds: [ID]
    noms: String
    emails: String
  ): Utilisateurs

  "Substance en fonction de son id"
  substance(id: ID!): Substance

  "Liste des substances"
  substances: [Substance]

  "Metas"
  devises: [Devise]
  documentsTypes(repertoire: ID, typeId: ID): [DocumentType]
  documentsVisibilites: [DocumentVisibilite]
  domaines: [Domaine]
  geoSystemes: [GeoSysteme]
  referencesTypes: [ReferenceType]
  statuts: [TitreStatut]
  types: [TitreTypeType]
  unites: [Unite]

  "Liste des permissions utilisateurs"
  permissions: [Permission]

  "Entreprise en fonction de son id"
  entreprise(id: ID!): Entreprise

  "Liste des entreprises"
  entreprises(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    noms: String
    etapeId: ID
  ): Entreprises

  "Administration en fonction de son id"
  administration(id: ID!): Administration

  "Liste des administrations"
  administrations: [Administration]

  "Statistiques"
  statistiques: Statistiques

  documents(entreprisesIds: [ID!]): [Document]

  "Définitions et descriptions"
  definitions: [Definition]
}

"""
## Écriture

Ces requêtes sont __protégées__. Elles nécessitent une authentification par token (jwt) et un niveau de permission suffisant.
"""
type Mutation {
  "Connecte l'utilisateur en fonction de ses identifiants"
  utilisateurTokenCreer(email: String!, motDePasse: String!): UtilisateurToken

  "Connecte l'utilisateur en fonction du ticket Cerbère"
  utilisateurCerbereTokenCreer(ticket: String!): UtilisateurToken

  "Connecte l'utilisateur en fonction du ticket Cerbère"
  utilisateurCerbereUrlObtenir(url: String!): String

  "Crée un utilisateur"
  utilisateurCreer(utilisateur: InputUtilisateurCreation!): Utilisateur

  "Modifie un utilisateur"
  utilisateurModifier(utilisateur: InputUtilisateurModification!): Utilisateur

  "Supprime un utilisateur"
  utilisateurSupprimer(id: ID!): Utilisateur

  "Modifie le mot de passe d'un utilisateur"
  utilisateurMotDePasseModifier(
    id: ID!
    motDePasse: String!
    motDePasseNouveau1: String!
    motDePasseNouveau2: String!
  ): Utilisateur

  "Envoie un email à un utilisateur contenant une url pour modifier son mot de passe"
  utilisateurMotDePasseEmailEnvoyer(email: String!): String

  "Envoie un email à un utilisateur contenant une url pour créer son compte"
  utilisateurCreationEmailEnvoyer(email: String!): String

  "Initialise un mot de passe utilisateur"
  utilisateurMotDePasseInitialiser(
    motDePasse1: String!
    motDePasse2: String!
  ): UtilisateurToken

  "Crée un titre minier"
  titreCreer(titre: InputTitreCreation!): Titre

  "Modifie un titre minier"
  titreModifier(titre: InputTitreModification!): Titre

  "Supprime un titre minier"
  titreSupprimer(id: ID!): Titre

  "Crée une démarche et met à jour le titre minier"
  demarcheCreer(demarche: InputDemarcheCreation!): Titre

  "Modifie une démarche et met à jour le titre minier"
  demarcheModifier(demarche: InputDemarcheModification!): Titre

  "Supprime une démarche et met à jour le titre minier"
  demarcheSupprimer(id: ID!): Titre

  "Crée une étape et met à jour le titre minier"
  etapeCreer(etape: InputEtapeCreation!): Titre

  "Modifie une étape et met à jour le titre minier"
  etapeModifier(etape: InputEtapeModification!): Titre

  "Supprime une étape et met à jour le titre minier"
  etapeSupprimer(id: ID!): Titre

  etapeJustificatifsAssocier(id: ID!, documentsIds: [ID]!): Titre

  etapeJustificatifDissocier(id: ID!, documentId: ID): Titre

  "Crée un document et met à jour le titre minier"
  documentCreer(document: InputDocumentCreation!): Document

  "Modifie un document et met à jour le titre minier"
  documentModifier(document: InputDocumentModification!): Document

  "Supprime un document et met à jour le titre minier"
  documentSupprimer(id: ID!): Boolean

  "Crée ou modifie une activité"
  activiteModifier(activite: InputActiviteModification!): Activite

  "Crée une entreprise"
  entrepriseCreer(entreprise: InputEntrepriseCreation!): Entreprise

  "Modifie une entreprise"
  entrepriseModifier(entreprise: InputEntrepriseModification!): Entreprise
}
