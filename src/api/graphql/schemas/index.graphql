# import * from 'scalars.graphql'
# import * from 'administrations.graphql'
# import * from 'calendrier.graphql'
# import * from 'documents.graphql'
# import * from 'entreprises.graphql'
# import * from 'geojsons.graphql'
# import * from 'metas-activites.graphql'
# import * from 'metas.graphql'
# import * from 'metas-travaux.graphql'
# import * from 'points.graphql'
# import * from 'statistiques.graphql'
# import * from 'substances.graphql'
# import * from 'territoires.graphql'
# import * from 'titres-activites.graphql'
# import * from 'titres-demarches.graphql'
# import * from 'titres-etapes.graphql'
# import * from 'titres.graphql'
# import * from 'utilisateurs.graphql'
# import * from 'titres-travaux.graphql'
# import * from 'titres-travaux-etapes.graphql'
# import * from 'titre-demande.graphql'

"""
# API de Camino

> [Documentation](https://docs.camino.beta.gouv.fr)

## Lecture

Certaines requêtes sont publiques.

Certaines requêtes sont protégées et nécessitent une authentification par token (jwt).

La plupart des requêtes retournent un résultat plus ou moins riche selon le niveau de permission de l'utilisateur authentifié.
"""
type Query {
  "Version de l'API"
  version: String

  "Utilisateur en fonction du token"
  moi: Utilisateur

  "Titre minier en fonction de son id"
  titre(id: ID!): Titre

  "Liste de titres miniers, en fonction d'arguments (optionnels)"
  titres(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    perimetre: [Float!]
    typesIds: [ID]
    domainesIds: [ID]
    statutsIds: [ID]
    substances: String
    noms: String
    entreprises: String
    references: String
    territoires: String
  ): Titres

  "Liste de titres miniers, en fonction d'arguments (optionnels)"
  demarches(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    statutsIds: [ID]
    etapesInclues: [InputEtapeFiltre]
    etapesExclues: [InputEtapeFiltre]
    titresTypesIds: [ID]
    titresDomainesIds: [ID]
    titresStatutsIds: [ID]
    titresNoms: String
    titresEntreprises: String
    titresSubstances: String
    titresReferences: String
    titresTerritoires: String
  ): Demarches

  "Étape en fonction de son id"
  etape(id: ID!): Etape

  etapeHeritage(date: String!, titreDemarcheId: ID!, typeId: ID!): EtapeHeritage

  "Activité en fonction de son id"
  activite(id: ID!): Activite

  "Liste des activités"
  activites(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    annees: [Int]
    statutsIds: [ID]
    titresTypesIds: [ID]
    titresDomainesIds: [ID]
    titresStatutsIds: [ID]
    titresNoms: String
    titresEntreprises: String
    titresSubstances: String
    titresReferences: String
    titresTerritoires: String
  ): Activites

  "Années des activités"
  activitesAnnees: [Int]

  "Types d'activités"
  activitesTypes: [ActiviteType]

  "Statuts des activités"
  activitesStatuts: [ActiviteStatut]

  "Types de démarches"
  demarchesTypes(titreId: ID, titreDemarcheId: ID): [DemarcheType]

  "Statuts de démarches"
  demarchesStatuts: [DemarcheStatut]

  "Types d'étapes"
  etapesTypes(titreDemarcheId: ID, titreEtapeId: ID, date: String): [EtapeType]

  "Status d'étapes"
  etapesStatuts: [EtapeStatut]

  "Types des travaux"
  travauxTypes: [TravauxType]

  "Types d'étapes de travaux"
  travauxEtapesTypes(titreTravauxId: ID): [TravauxEtapeType]

  "Utilisateur en fonction de son id"
  utilisateur(id: ID!): Utilisateur

  "Liste d'utilisateurs en fonction d'arguments (optionnels)"
  utilisateurs(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    entrepriseIds: [ID]
    administrationIds: [ID]
    permissionIds: [ID]
    noms: String
    emails: String
  ): Utilisateurs

  "Substance en fonction de son id"
  substance(id: ID!): Substance

  "Liste des substances"
  substances: [Substance]

  "Liste des substances par nom distinct"
  substancesLegales: [SubstanceLegale]

  "Metas"
  devises: [Devise]
  documentsTypes(repertoire: ID, typeId: ID): [DocumentType]
  documentsVisibilites: [DocumentVisibilite]
  domaines: [Domaine]
  geoSystemes: [GeoSysteme]
  referencesTypes: [ReferenceType]
  statuts: [TitreStatut]
  types: [TitreTypeType]
  unites: [Unite]
  administrationsTypes: [AdministrationType]
  departements: [Departement]
  regions: [Region]
  phasesStatuts: [PhaseStatut]
  titresTypes: [TitreType]

  titresTypesTitresStatuts: [TitreTypeTitreStatut]

  titresTypesDemarchesTypes: [TitreTypeDemarcheType]
  titresTypesDemarchesTypesEtapesTypes: [TitreTypeDemarcheTypeEtapeType]
  etapesTypesEtapesStatuts: [EtapeTypeEtapeStatut]
  etapesTypesDocumentsTypes: [EtapeTypeDocumentType]
  etapesTypesJustificatifsTypes: [EtapeTypeJustificatifType]
  travauxTypesTravauxEtapesTypes: [TravauxTypeTravauxEtapeType]
  travauxEtapesTypesDocumentsTypes: [TravauxEtapeTypeDocumentType]
  travauxEtapesTypesEtapesStatuts: [TravauxEtapeTypeEtapeStatut]

  activitesTypesTitresTypes: [ActiviteTypeTitreType]
  activitesTypesDocumentsTypes: [ActiviteTypeDocumentType]
  activitesTypesPays: [ActiviteTypePays]

  "Liste des permissions utilisateurs"
  permissions: [Permission]

  "Entreprise en fonction de son id"
  entreprise(id: ID!): Entreprise

  "Liste des entreprises"
  entreprises(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    noms: String
    etapeId: ID
    archive: Boolean
    etapeUniquement: Boolean
  ): Entreprises

  entreprisesTitresCreation: [Entreprise]

  "Administration en fonction de son id"
  administration(id: ID!): Administration

  "Liste des administrations"
  administrations(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    noms: String
    typesIds: [ID]
  ): Administrations

  "Statistiques"
  statistiquesGlobales: StatistiquesGlobales
  statistiquesGuyane: StatistiquesGuyane
  statistiquesGranulatsMarins: StatistiquesGranulatsMarins

  documents(entreprisesIds: [ID!]): [Document]

  "Définitions et descriptions"
  definitions: [Definition]
}

"""
# API de Camino

> [Documentation](https://docs.camino.beta.gouv.fr)

## Écriture

Ces requêtes sont __protégées__. Elles nécessitent une authentification par token (jwt) et un niveau de permission suffisant.
"""
type Mutation {
  "Connecte l'utilisateur en fonction de ses identifiants"
  utilisateurTokenCreer(email: String!, motDePasse: String!): UtilisateurToken

  "Rafraichit le token de l'utilisateur connecté"
  utilisateurTokenRafraichir(refreshToken: String!): UtilisateurToken

  "Connecte l'utilisateur en fonction du ticket Cerbère"
  utilisateurCerbereTokenCreer(ticket: String!): UtilisateurToken

  "Connecte l'utilisateur en fonction du ticket Cerbère"
  utilisateurCerbereUrlObtenir(url: String!): String

  "Crée un utilisateur"
  utilisateurCreer(utilisateur: InputUtilisateurCreation!): Utilisateur

  "Modifie un utilisateur"
  utilisateurModifier(utilisateur: InputUtilisateurModification!): Utilisateur

  "Supprime un utilisateur"
  utilisateurSupprimer(id: ID!): Utilisateur

  "Modifie le mot de passe d'un utilisateur"
  utilisateurMotDePasseModifier(
    id: ID!
    motDePasse: String!
    motDePasseNouveau1: String!
    motDePasseNouveau2: String!
  ): Utilisateur

  "Envoie un email à un utilisateur contenant une url pour modifier son mot de passe"
  utilisateurMotDePasseMessageEnvoyer(email: String!): String

  "Envoie un email à un utilisateur contenant une url pour créer son compte"
  utilisateurCreationMessageEnvoyer(email: String!): String

  "Initialise un mot de passe utilisateur"
  utilisateurMotDePasseInitialiser(
    motDePasse1: String!
    motDePasse2: String!
  ): UtilisateurToken

  "Envoie un email à l’utisateur pour vérifier non nouvel email"
  utilisateurEmailMessageEnvoyer(email: String!): String

  "Modifie l’email de l’utilisateur à l’aide du token reçu dans l’email de vérification"
  utilisateurEmailModifier(emailToken: String!): UtilisateurToken

  "Crée un titre minier"
  titreCreer(titre: InputTitreCreation!): Titre

  "Modifie un titre minier"
  titreModifier(titre: InputTitreModification!): Titre

  "Supprime un titre minier"
  titreSupprimer(id: ID!): Titre

  "Crée une démarche et met à jour le titre minier"
  demarcheCreer(demarche: InputDemarcheCreation!): Titre

  "Modifie une démarche et met à jour le titre minier"
  demarcheModifier(demarche: InputDemarcheModification!): Titre

  "Supprime une démarche et met à jour le titre minier"
  demarcheSupprimer(id: ID!): Titre

  "Crée une étape et met à jour le titre minier"
  etapeCreer(etape: InputEtapeCreation!, depose: Boolean): Titre

  "Modifie une étape et met à jour le titre minier"
  etapeModifier(etape: InputEtapeModification!, depose: Boolean): Titre

  "Supprime une étape et met à jour le titre minier"
  etapeSupprimer(id: ID!): Titre

  etapeJustificatifsAssocier(id: ID!, documentsIds: [ID]!): Titre

  etapeJustificatifDissocier(id: ID!, documentId: ID): Titre

  "Crée un document et met à jour le titre minier"
  documentCreer(document: InputDocumentCreation!): Document

  "Modifie un document et met à jour le titre minier"
  documentModifier(document: InputDocumentModification!): Document

  "Supprime un document et met à jour le titre minier"
  documentSupprimer(id: ID!): Boolean

  "Crée ou modifie une activité"
  activiteModifier(
    activite: InputActiviteModification!
    depose: Boolean
  ): Activite

  "Supprime une activité"
  activiteSupprimer(id: ID!): Activite

  "Crée une entreprise"
  entrepriseCreer(entreprise: InputEntrepriseCreation!): Entreprise

  "Modifie une entreprise"
  entrepriseModifier(entreprise: InputEntrepriseModification!): Entreprise

  "Modifie une administration"
  administrationModifier(administration: InputAdministration!): Administration

  administrationTitreTypeModifier(
    administrationTitreType: InputAdministrationTitreType!
  ): Administration

  administrationTitreTypeTitreStatutModifier(
    administrationTitreTypeTitreStatut: InputAdministrationTitreTypeTitreStatut!
  ): Administration

  administrationTitreTypeEtapeTypeModifier(
    administrationTitreTypeEtapeType: InputAdministrationTitreTypeEtapeType!
  ): Administration

  administrationActiviteTypeModifier(
    administrationActiviteType: InputAdministrationActiviteType!
  ): Administration

  entrepriseTitreTypeModifier(
    entrepriseTitreType: InputEntrepriseTitreType!
  ): Entreprise

  "Crée une démarche de travaux et met à jour le titre minier"
  travauxCreer(travaux: InputTravauxCreation!): Titre

  "Modifie une démarche de travaux et met à jour le titre minier"
  travauxModifier(travaux: InputTravauxModification!): Titre

  "Supprime une démarche de travaux et met à jour le titre minier"
  travauxSupprimer(id: ID!): Titre

  "Crée une étape de travaux et met à jour le titre minier"
  travauxEtapeCreer(etape: InputTravauxEtapeCreation!): Titre

  "Modifie une étape de travaux et met à jour le titre minier"
  travauxEtapeModifier(etape: InputTravauxEtapeModification!): Titre

  "Supprime une étape de travaux et met à jour le titre minier"
  travauxEtapeSupprimer(id: ID!): Titre

  domaineModifier(domaine: InputDomaine!): [Domaine]

  definitionModifier(definition: InputDefinition!): [Definition]

  titreTypeTypeModifier(titreType: InputTitreTypeType!): [TitreTypeType]

  titreStatutModifier(titreStatut: InputTitreStatut!): [TitreStatut]

  demarcheTypeModifier(demarcheType: InputDemarcheType!): [DemarcheType]

  travauxTypeModifier(travauxType: InputTravauxType!): [TravauxType]

  travauxEtapeTypeModifier(
    travauxEtapeType: InputTravauxEtapeType!
  ): [TravauxEtapeType]

  demarcheStatutModifier(demarcheStatut: InputDemarcheStatut!): [DemarcheStatut]

  phaseStatutModifier(phaseStatut: InputPhaseStatut!): [PhaseStatut]

  etapeTypeModifier(etapeType: InputEtapeType!): [EtapeType]

  etapeStatutModifier(etapeStatut: InputEtapeStatut!): [EtapeStatut]

  activiteTypeModifier(activiteType: InputActiviteType!): [ActiviteType]

  activiteStatutModifier(activiteStatut: InputActiviteStatut!): [ActiviteStatut]

  deviseModifier(devise: InputDevise!): [Devise]

  uniteModifier(unite: InputUnite!): [Unite]

  administrationTypeModifier(
    administrationType: InputAdministrationType!
  ): [AdministrationType]

  permissionModifier(permission: InputPermission!): [Permission]

  documentTypeModifier(documentType: InputDocumentType!): [DocumentType]

  referenceTypeModifier(referenceType: InputReferenceType!): [ReferenceType]

  geoSystemeModifier(geoSysteme: InputGeoSysteme!): [GeoSysteme]

  titreTypeModifier(titreType: InputTitreTypeModification!): [TitreType]

  titreTypeCreer(titreType: InputTitreTypeCreation!): [TitreType]

  titreTypeSupprimer(titreType: InputTitreTypeModification!): [TitreType]

  titreTypeTitreStatutModifier(
    titreTypeTitreStatut: InputTitreTypeTitreStatut!
  ): [TitreTypeTitreStatut]

  titreTypeTitreStatutCreer(
    titreTypeTitreStatut: InputTitreTypeTitreStatut!
  ): [TitreTypeTitreStatut]

  titreTypeTitreStatutSupprimer(
    titreTypeTitreStatut: InputTitreTypeTitreStatut!
  ): [TitreTypeTitreStatut]

  titreTypeDemarcheTypeModifier(
    titreTypeDemarcheType: InputTitreTypeDemarcheType!
  ): [TitreTypeDemarcheType]

  titreTypeDemarcheTypeCreer(
    titreTypeDemarcheType: InputTitreTypeDemarcheType!
  ): [TitreTypeDemarcheType]

  titreTypeDemarcheTypeSupprimer(
    titreTypeDemarcheType: InputTitreTypeDemarcheType!
  ): [TitreTypeDemarcheType]

  titreTypeDemarcheTypeEtapeTypeModifier(
    titreTypeDemarcheTypeEtapeType: InputTitreTypeDemarcheTypeEtapeType!
  ): [TitreTypeDemarcheTypeEtapeType]

  titreTypeDemarcheTypeEtapeTypeCreer(
    titreTypeDemarcheTypeEtapeType: InputTitreTypeDemarcheTypeEtapeType!
  ): [TitreTypeDemarcheTypeEtapeType]

  titreTypeDemarcheTypeEtapeTypeSupprimer(
    titreTypeDemarcheTypeEtapeType: InputTitreTypeDemarcheTypeEtapeType!
  ): [TitreTypeDemarcheTypeEtapeType]

  etapeTypeEtapeStatutModifier(
    etapeTypeEtapeStatut: InputEtapeTypeEtapeStatut!
  ): [EtapeTypeEtapeStatut]

  etapeTypeEtapeStatutCreer(
    etapeTypeEtapeStatut: InputEtapeTypeEtapeStatut!
  ): [EtapeTypeEtapeStatut]

  etapeTypeEtapeStatutSupprimer(
    etapeTypeEtapeStatut: InputEtapeTypeEtapeStatut!
  ): [EtapeTypeEtapeStatut]

  etapeTypeDocumentTypeModifier(
    etapeTypeDocumentType: InputEtapeTypeDocumentType!
  ): [EtapeTypeDocumentType]

  etapeTypeDocumentTypeCreer(
    etapeTypeDocumentType: InputEtapeTypeDocumentType!
  ): [EtapeTypeDocumentType]

  etapeTypeDocumentTypeSupprimer(
    etapeTypeDocumentType: InputEtapeTypeDocumentType!
  ): [EtapeTypeDocumentType]

  etapeTypeJustificatifTypeModifier(
    etapeTypeJustificatifType: InputEtapeTypeJustificatifType!
  ): [EtapeTypeJustificatifType]

  etapeTypeJustificatifTypeCreer(
    etapeTypeJustificatifType: InputEtapeTypeJustificatifType!
  ): [EtapeTypeJustificatifType]

  etapeTypeJustificatifTypeSupprimer(
    etapeTypeJustificatifType: InputEtapeTypeJustificatifType!
  ): [EtapeTypeJustificatifType]

  travauxTypeTravauxEtapeTypeModifier(
    travauxTypeTravauxEtapeType: InputTravauxTypeTravauxEtapeType!
  ): [TravauxTypeTravauxEtapeType]

  travauxTypeTravauxEtapeTypeCreer(
    travauxTypeTravauxEtapeType: InputTravauxTypeTravauxEtapeType!
  ): [TravauxTypeTravauxEtapeType]

  travauxTypeTravauxEtapeTypeSupprimer(
    travauxTypeTravauxEtapeType: InputTravauxTypeTravauxEtapeType!
  ): [TravauxTypeTravauxEtapeType]

  travauxEtapeTypeDocumentTypeModifier(
    travauxEtapeTypeDocumentType: InputTravauxEtapeTypeDocumentType!
  ): [TravauxEtapeTypeDocumentType]

  travauxEtapeTypeDocumentTypeCreer(
    travauxEtapeTypeDocumentType: InputTravauxEtapeTypeDocumentType!
  ): [TravauxEtapeTypeDocumentType]

  travauxEtapeTypeDocumentTypeSupprimer(
    travauxEtapeTypeDocumentType: InputTravauxEtapeTypeDocumentType!
  ): [TravauxEtapeTypeDocumentType]

  travauxEtapeTypeEtapeStatutModifier(
    travauxEtapeTypeEtapeStatut: InputTravauxEtapeTypeEtapeStatut!
  ): [TravauxEtapeTypeEtapeStatut]

  travauxEtapeTypeEtapeStatutCreer(
    travauxEtapeTypeEtapeStatut: InputTravauxEtapeTypeEtapeStatut!
  ): [TravauxEtapeTypeEtapeStatut]

  travauxEtapeTypeEtapeStatutSupprimer(
    travauxEtapeTypeEtapeStatut: InputTravauxEtapeTypeEtapeStatut!
  ): [TravauxEtapeTypeEtapeStatut]

  activiteTypeTitreTypeCreer(
    activiteTypeTitreType: InputActiviteTypeTitreType!
  ): [ActiviteTypeTitreType]

  activiteTypeTitreTypeSupprimer(
    activiteTypeTitreType: InputActiviteTypeTitreType!
  ): [ActiviteTypeTitreType]

  activiteTypeDocumentTypeCreer(
    activiteTypeDocumentType: InputActiviteTypeDocumentType!
  ): [ActiviteTypeDocumentType]

  activiteTypeDocumentTypeModifier(
    activiteTypeDocumentType: InputActiviteTypeDocumentType!
  ): [ActiviteTypeDocumentType]

  activiteTypeDocumentTypeSupprimer(
    activiteTypeDocumentType: InputActiviteTypeDocumentType!
  ): [ActiviteTypeDocumentType]

  activiteTypePaysCreer(
    activiteTypePays: InputActiviteTypePays!
  ): [ActiviteTypePays]

  activiteTypePaysSupprimer(
    activiteTypePays: InputActiviteTypePays!
  ): [ActiviteTypePays]

  titreDemandeCreer(titreDemande: InputTitreDemande): TitreDemandeIds
}
